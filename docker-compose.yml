services:
  db:
    image: postgres:15
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: "game_of_life_extendi_${RAILS_ENV:-development}"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  app:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        RAILS_ENV: "${RAILS_ENV:-development}"
    environment:
      RAILS_ENV: "${RAILS_ENV:-development}"
      DATABASE_URL: "postgres://postgres:password@db:5432/game_of_life_extendi_${RAILS_ENV:-development}"
    depends_on:
      - db
    volumes:
      - .:/rails
    ports:
      - "3000:3000"
    tty: true
    # If you want to use the 'development' stage, just don't set RAILS_ENV=production
    # and the image will use the CMD from the 'development' stage.
    command: >
      bash -c "rm -f tmp/pids/server.pid && bin/rails db:create db:migrate && bin/rails s -b 0.0.0.0 -p 3000"

volumes:
  postgres_data:
